<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0611.0333                               -->
<workbook original-version='18.1' source-build='2022.1.3 (20221.22.0611.0333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='country_wise_latest' inline='true' name='federated.17alet51uhy4in19klqt0140m056' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_wise_latest' name='textscan.16x1y0y1q6qets1f40j7b0bia6nu'>
            <connection class='textscan' directory='E:/Covid 19 Analysis/Datasets' filename='country_wise_latest.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16x1y0y1q6qets1f40j7b0bia6nu' name='country_wise_latest.csv' table='[country_wise_latest#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country/Region' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='integer' name='New cases' ordinal='5' />
            <column datatype='integer' name='New deaths' ordinal='6' />
            <column datatype='integer' name='New recovered' ordinal='7' />
            <column datatype='real' name='Deaths / 100 Cases' ordinal='8' />
            <column datatype='real' name='Recovered / 100 Cases' ordinal='9' />
            <column datatype='real' name='Deaths / 100 Recovered' ordinal='10' />
            <column datatype='integer' name='Confirmed last week' ordinal='11' />
            <column datatype='integer' name='1 week change' ordinal='12' />
            <column datatype='real' name='1 week % increase' ordinal='13' />
            <column datatype='string' name='WHO Region' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16x1y0y1q6qets1f40j7b0bia6nu' name='country_wise_latest.csv' table='[country_wise_latest#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country/Region' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='integer' name='New cases' ordinal='5' />
            <column datatype='integer' name='New deaths' ordinal='6' />
            <column datatype='integer' name='New recovered' ordinal='7' />
            <column datatype='real' name='Deaths / 100 Cases' ordinal='8' />
            <column datatype='real' name='Recovered / 100 Cases' ordinal='9' />
            <column datatype='real' name='Deaths / 100 Recovered' ordinal='10' />
            <column datatype='integer' name='Confirmed last week' ordinal='11' />
            <column datatype='integer' name='1 week change' ordinal='12' />
            <column datatype='real' name='1 week % increase' ordinal='13' />
            <column datatype='string' name='WHO Region' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New cases]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>New cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New deaths]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>New deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New recovered]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>New recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths / 100 Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths / 100 Cases]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Deaths / 100 Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered / 100 Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered / 100 Cases]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Recovered / 100 Cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths / 100 Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths / 100 Recovered]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Deaths / 100 Recovered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed last week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed last week]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Confirmed last week</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 week change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 week change]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>1 week change</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 week % increase</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 week % increase]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>1 week % increase</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='1 Week % Increase' datatype='real' name='[1 week % increase]' role='measure' type='quantitative' />
      <column caption='1 Week Change' datatype='integer' name='[1 week change]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column datatype='string' name='[WHO Region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='country_wise_latest.csv' datatype='table' name='[__tableau_internal_object_id__].[country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO Region]' derivation='None' name='[none:WHO Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South-East Asia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Mediterranean&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Western Pacific&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.17alet51uhy4in19klqt0140m056].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17alet51uhy4in19klqt0140m056]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_wise_latest.csv' id='country_wise_latest.csv_9621124BEEE34547982A2F7E71274A26'>
            <properties context=''>
              <relation connection='textscan.16x1y0y1q6qets1f40j7b0bia6nu' name='country_wise_latest.csv' table='[country_wise_latest#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country/Region' ordinal='0' />
                  <column datatype='integer' name='Confirmed' ordinal='1' />
                  <column datatype='integer' name='Deaths' ordinal='2' />
                  <column datatype='integer' name='Recovered' ordinal='3' />
                  <column datatype='integer' name='Active' ordinal='4' />
                  <column datatype='integer' name='New cases' ordinal='5' />
                  <column datatype='integer' name='New deaths' ordinal='6' />
                  <column datatype='integer' name='New recovered' ordinal='7' />
                  <column datatype='real' name='Deaths / 100 Cases' ordinal='8' />
                  <column datatype='real' name='Recovered / 100 Cases' ordinal='9' />
                  <column datatype='real' name='Deaths / 100 Recovered' ordinal='10' />
                  <column datatype='integer' name='Confirmed last week' ordinal='11' />
                  <column datatype='integer' name='1 week change' ordinal='12' />
                  <column datatype='real' name='1 week % increase' ordinal='13' />
                  <column datatype='string' name='WHO Region' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed vs Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
              <size column='[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]' />
              <text column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]</rows>
        <cols>[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{7C0AB6C3-B6FB-4A17-BFFC-BA0255855829}' />
    </worksheet>
    <worksheet name='Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Deaths Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' />
              <color column='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' />
              <text column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
              <text column='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D6D99DEB-9C4E-4710-8A1C-599468FC3D60}' />
    </worksheet>
    <worksheet name='Dual Axis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dual Axis&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17alet51uhy4in19klqt0140m056].[sum:Recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.17alet51uhy4in19klqt0140m056].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17alet51uhy4in19klqt0140m056].[sum:Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.17alet51uhy4in19klqt0140m056].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.17alet51uhy4in19klqt0140m056].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.17alet51uhy4in19klqt0140m056].[sum:Recovered:qk] + [federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk])</rows>
        <cols>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{FCA06BA2-993D-4AB8-AECE-3BF053DBE2E7}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17alet51uhy4in19klqt0140m056].[Longitude (generated)]' field-type='quantitative' max='19152147.755436212' min='-21400732.877439529' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17alet51uhy4in19klqt0140m056].[Latitude (generated)]' field-type='quantitative' max='13729484.79231783' min='-6836618.3356617233' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]' />
              <lod column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
              <lod column='[federated.17alet51uhy4in19klqt0140m056].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17alet51uhy4in19klqt0140m056].[Latitude (generated)]</rows>
        <cols>[federated.17alet51uhy4in19klqt0140m056].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{175C9C0A-D0E0-43F1-AE61-96F2B10273F4}' />
    </worksheet>
    <worksheet name='Mortality Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mortality Rate&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths / 100 Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths / 100 Cases]' derivation='Sum' name='[sum:Deaths / 100 Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths / 100 Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths / 100 Cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths / 100 Cases:qk]' value='63' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</rows>
        <cols>[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths / 100 Cases:qk]</cols>
      </table>
      <simple-id uuid='{A50F3AF7-69BA-4729-B0F7-C1BD9445413E}' />
    </worksheet>
    <worksheet name='Recovery Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Recovery&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Avg' name='[avg:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
              <size column='[federated.17alet51uhy4in19klqt0140m056].[avg:Recovered:qk]' />
              <text column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D1E5E6AC-BDF9-4BB8-9207-ECEFC935E4B9}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Confirmed Countries&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;US&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]</rows>
        <cols>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{FB0AE2EE-282F-416A-AC42-A6A2D027D894}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Countries(H)'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.17alet51uhy4in19klqt0140m056' />
          </datasources>
          <datasource-dependencies datasource='federated.17alet51uhy4in19klqt0140m056'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;US&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]' value='39' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</rows>
        <cols>[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{FC1CE4A7-38D8-4249-AB33-AD6EE9762480}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='horz' type-v2='layout-flow' w='99016' x='492' y='940'>
            <zone h='98120' id='7' type-v2='layout-basic' w='89176' x='492' y='940'>
              <zone h='49060' id='3' name='Global Cases' w='25831' x='38007' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='5' name='Top 10 Confirmed Countries' w='37515' x='492' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='6' name='Death Cases' w='37515' x='492' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='11' name='Recovery Cases' w='25830' x='63838' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='13' name='Dual Axis' w='51661' x='38007' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9840' x='89668' y='940'>
              <zone h='8578' id='10' name='Death Cases' pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' type-v2='color' w='9840' x='89668' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28202' id='12' name='Recovery Cases' pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' type-v2='color' w='9840' x='89668' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='14' name='Dual Axis' pane-specification-id='2' param='[federated.17alet51uhy4in19klqt0140m056].[:Measure Names]' type-v2='color' w='9840' x='89668' y='37720'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='15' param='vert' type-v2='layout-flow' w='99016' x='492' y='940'>
                <zone fixed-size='280' h='49060' id='5' is-fixed='true' name='Top 10 Confirmed Countries' w='37515' x='492' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='3' is-fixed='true' name='Global Cases' w='25831' x='38007' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='11' is-fixed='true' name='Recovery Cases' w='25830' x='63838' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28202' id='12' name='Recovery Cases' pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' type-v2='color' w='9840' x='89668' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='6' is-fixed='true' name='Death Cases' w='37515' x='492' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='10' name='Death Cases' pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' type-v2='color' w='9840' x='89668' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='13' is-fixed='true' name='Dual Axis' w='51661' x='38007' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='14' name='Dual Axis' pane-specification-id='2' param='[federated.17alet51uhy4in19klqt0140m056].[:Measure Names]' type-v2='color' w='9840' x='89668' y='37720'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{88CF6A17-51AF-4C0B-A6D1-92F20D666054}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 10 Confirmed Countries(H)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:WHO Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E2893F9-A690-476C-B7D7-F9FAAEB497BA}' />
    </window>
    <window class='worksheet' name='Top 10 Confirmed Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B9B895F-987A-433C-BCF9-E35817789F3B}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:WHO Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{49D05CE9-A2A2-4836-BA68-49BF942F5B02}' />
    </window>
    <window class='worksheet' name='Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B88CA78-A542-467B-9AA4-88E0E2781AD2}' />
    </window>
    <window class='worksheet' name='Recovery Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:WHO Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01066C60-CE29-44A0-91B8-274B021E6191}' />
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD2288FD-ECCA-44D9-AB6B-3DF91170F7C0}' />
    </window>
    <window class='worksheet' name='Mortality Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16BED202-1DBA-4094-9810-E146BB094AC9}' />
    </window>
    <window class='worksheet' name='Dual Axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.17alet51uhy4in19klqt0140m056].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
            <field>[federated.17alet51uhy4in19klqt0140m056].[none:WHO Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E64FE38-EFC6-4CFB-95AA-6C15D5494F76}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Death Cases' />
        <viewpoint name='Dual Axis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovery Cases'>
          <highlight>
            <color-one-way>
              <field>[federated.17alet51uhy4in19klqt0140m056].[none:Country/Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Confirmed Countries'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{6924E923-6926-4587-BF5F-9227EA60503A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZaUlEQVR4nO3dWXMc97nf8W/37DOYDcBgXwkSIsFNotYjO5aXKle5zrk5uclVrnKVqqTy
      FvwC8g584zvnUiXHUaViZ7F1TC2kSEoksa8EMPu+9p4LkiApEUcYLsBA/XyqVCo2H/znPwR+
      6H93z9OtOI7jIIRLqSc9ASFO0rEEwLIsjrqjsW0b27aPPO7rmEO340rt6a3tOgCOZVCpNWnV
      K2zv7KCZNoVcBs2w0FoNCqUqlqFhWNBqtbod/sg/pN3W9sIcpLb3ar1H/oqHX8Xm+hoVHQKO
      RjI1Sru4T0VTyK6tgWUQ8CnodR8dNQqKhzPhcFcvIcRx6ioAzUqGrXQJw9R5/9pVyrldHjQ8
      LFycJ7PTwPGGGYj7KZdKLO3l+cXP/uFgSdPNEkhRlCMtg7rZ5XUzh17aRUvt661VXuQs0ObW
      Fn7FpliqMDo1w+6DHeL9Q9CpUmubzIwlccJD5NJ7zJ+dxbYsVFVFUZQjTUxRFFT1h1dnpmni
      9R4tw1YXc+hmXKk93bXdLYEemZ2ZAWB8+uGfUwP9j/5m7Jm65NnZFxleiGMjp0GFq0kAhKtJ
      AIRrFHNZysX8M9te6BhAiNPGtm1y6X0URSHRP3iwXfYAwhXKhTz9gyliiSSVUvFguwRA/Og5
      jkM+kyY1Osbw+ATZvd2Da0ISAPGjV8xnSQ4MHlxfiiWS1MolQI4BxI+c4zhUikUs06RaKQMP
      jwd8LR8DQ8MSAPHjpigKZy9c/N520zQB2QMIF7h37x4XLlxgaWmJfD6PaZr89Kc/xev1yjGA
      +PHb29vDcRzS6TT7+/tMT0/j8XgAOQgWLmDbNs1mE1VV+c1vfsO9e/doNBqABEC4wDvvvMON
      Gzd47733WF1dZXJykkgkArzgx6G71c1HkeXj0FJ7nLUv1BJZrTcx9Q65QglwKOazD1si2w2K
      5RqWoWHa0G63ux1eiGPVdUvk1vo6Zc0mrNr0hTyslCuofj+ZwsOWSL9XQav50DwxbEdhbjL0
      mqYuxMvruiVyY7+AaRlMTUwwOp7k+lcPuPrOJTI7GzjeMIOPWiIX9/L88iNpiZTa3q59oWOA
      ja0t/I5BvlznzNk5NtY3iQ0MoXQq1NrWk5bI/T3mz0lLpNT2bq0cBL/kuFJ7umvlNKhwNQmA
      cDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcLWuAuA4
      D58IWWu2aTdq7O7toZs2pUIOzbDQ201KFWmJFKdHVx1hjm2B4mVtZYWA1yE5OEKrlKbYsknn
      18DU8XkVOmG/tESKU6GrAKgeH1qzjKP6mJgYppB5wG7bx4WF+UctkRFSj1sid/P86ufSEim1
      vV3bVQBMvUW1qeNVVeq1Ks2OxczUJGuL94j1p6BTZTvdYGYsyT9MvsHW5hZvnDuD6jivpSMM
      eC0dYd2MK7Wnu1ZaIl9yXKk93bVyFki4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoE
      QLiaBEC4mgRAuJoEQLiaBEC4mgRAuFpX/QC2ZbCxtoY/2k8ypLKbrzF/dprN1VWSI1MoWpVS
      02RyKIblj9OsFEmlBl/X3IV4aV0FQFE9jIyOsra1S8vnZXo4wu3by0zOzZBL76DgIRHxksmk
      KbWzjI2P4zjOM//9kMc1R+kIcxznSHWPa7uZQzfjSu3pre0uAIqK1mmjouCoKj6/F8Ow8Hl9
      qIoCiorX66HTtmk2O6iqp6sfvMcTO6pux5Vaqf1ubdctkdl8iVBflIGIl8WtCu+8fZ6VpaWH
      S6BOhVzNZHZshMGZfmqFNEp8rKuWSODIHWGO4+DxeI48/6POoZtxpfZ010pL5EuOK7Wnu1bO
      AglXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAI
      V3vuZ0c3l27z6f/5OyNDKeLDZ/jVT98GHj4kb3tzHTUUJ6ya5Eo1ZufOsre9Tv/wJGi1hy2R
      wzFsX4xmtcjgoLREit713ADMnn+TtzIZKm2LQCBwsN3BYXhsirW1dSpmi2AsRaOwR2xokuz+
      DqCS7POSTe9T6mQZGR17pkvnVXf29FJnUS/XNto6fSH/ic6hV2sP7R7oHxgETWVkMHGwTQG2
      NlaZnpsnGvLTLm5za63KwpUxVFVBUTx4vV467Q71RpsJ75OWyKP2anbzlMgX6QE9akdYr/Ss
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QvnLQAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death Cases' width='192'>
      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
      CtjtFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dual Axis' width='192'>
      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
      J2P4wKOOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
      dd31ivr/AVxLx0/0lXRJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mortality Rate' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Recovery Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Countries' width='192'>
      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
      PQ71yaaOAAkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Countries(H)' width='192'>
      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
      ICxr/x9BTf5LW0hVjQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
